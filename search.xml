<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>使用Hexo+GitHub搭建个人博客</title>
      <link href="/2023/04/06/%E4%BD%BF%E7%94%A8Hexo+GitHub%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
      <url>/2023/04/06/%E4%BD%BF%E7%94%A8Hexo+GitHub%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</url>
      
        <content type="html"><![CDATA[<p>[toc]</p><h2 id="0-系统环境"><a href="#0-系统环境" class="headerlink" title="0. 系统环境"></a>0. 系统环境</h2><ul><li>Ubuntu 22.04.1 LTS</li></ul><h2 id="1-安装git"><a href="#1-安装git" class="headerlink" title="1. 安装git"></a>1. 安装git</h2><p>在当前系统下使用以下命令安装</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install git</span><br></pre></td></tr></table></figure><p>使用以下命令检查是否安装成功</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git --version</span><br></pre></td></tr></table></figure><h2 id="2-创建GitHub仓库"><a href="#2-创建GitHub仓库" class="headerlink" title="2. 创建GitHub仓库"></a>2. 创建GitHub仓库</h2><p>在<code>GitHub</code>上使用创建仓库，并命名为<code>&lt;username&gt;.github.io</code>，其中<code>username</code>为<code>GitHub</code>用户名。</p><span id="more"></span><h2 id="3-安装node-js"><a href="#3-安装node-js" class="headerlink" title="3. 安装node.js"></a>3. 安装node.js</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install nodejs</span><br></pre></td></tr></table></figure><p>此命令为从<code>Ubuntu</code>软件源中安装<code>node.js</code>，对应的版本为12.22.9，安装完成后，使用<code>nodejs -v</code> 检查安装版本。</p><p>如果要安装其他版本的<code>node.js</code> ，可以从<code>NodeSource</code> 或者<code>NVM</code> 安装。</p><h2 id="4-安装npm"><a href="#4-安装npm" class="headerlink" title="4. 安装npm"></a>4. 安装npm</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install npm</span><br></pre></td></tr></table></figure><p>安装完成后使用<code>npm -v</code> 检查安装版本，此处系统对应的版本为8.5.1。</p><p>注：建议在使用<code>npm</code>先运行<code>sudo npm update -g npm</code> 命令更新<code>npm</code> ，确保使用的<code>npm</code> 为最新版本。</p><h2 id="5-安装Hexo"><a href="#5-安装Hexo" class="headerlink" title="5.安装Hexo"></a>5.安装Hexo</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo npm install -g hexo-cli</span><br></pre></td></tr></table></figure><p>安装完成后使用<code>hexo -v</code> 检查安装版本，此处对应的版本为4.3.0。</p><h2 id="6-静态部署博客"><a href="#6-静态部署博客" class="headerlink" title="6.静态部署博客"></a>6.静态部署博客</h2><p>使用以下命令初始化一个<code>Hexo</code> 博客项目</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init &lt;folder&gt;</span><br></pre></td></tr></table></figure><p>该命令为在当前用户下创建一个名为<code>folder</code> 的文件夹作为博客项目根目录，并在该文件夹中初始化一个新的<code>Hexo</code> 博客项目，也可以直接创建文件夹，之后进入文件夹内输入<code>hexo init</code> 初始化项目，接下来使用以下命令进行静态部署</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo g</span><br></pre></td></tr></table></figure><p>部署完成后，使用以下命令启动服务器</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo s</span><br></pre></td></tr></table></figure><p>此时命令行输出如下</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">INFO Validating config</span><br><span class="line">INFO Start processing</span><br><span class="line">INFO Hexo is running at http://localhost:4000/ . Press Ctrl+C to stop.</span><br></pre></td></tr></table></figure><p>表示服务器启动成功，在浏览器输入<code>http://localhost:4000/</code>就可以打开新部署的网页，使用<code>Ctrl+C</code>停止运行服务器。</p><h2 id="7-将博客部署到GitHub"><a href="#7-将博客部署到GitHub" class="headerlink" title="7.将博客部署到GitHub"></a>7.将博客部署到GitHub</h2><p>进入项目文件夹根目录内，打开<code>_config.yml</code> 文件，并在文件底部添加如下内容</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repository: &lt;repoURL&gt;  #你的仓库地址</span><br><span class="line">  branch: main</span><br></pre></td></tr></table></figure><p>输入完成后，保存该文件，之后在项目文件夹根目录下，输入以下命令安装<code>Git</code> 部署插件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><p>安装完成后，使用以下命令将博客部署到<code>GitHub</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean   #清除缓存文件 db.json 和已生成的静态文件 public</span><br><span class="line">hexo g       #生成网站静态文件到默认设置的 public 文件夹(hexo generate 的缩写)</span><br><span class="line">hexo d       #自动生成网站静态文件，并部署到设定的仓库(hexo deploy 的缩写)</span><br></pre></td></tr></table></figure><p>部署完成后，在浏览器输入以下<code>URL</code>即可成功访问博客主页</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://&lt;username&gt;.github.io        #&lt;username&gt;.github.io即为第2步创建的仓库名</span><br></pre></td></tr></table></figure><h2 id="8-解析域名"><a href="#8-解析域名" class="headerlink" title="8.解析域名"></a>8.解析域名</h2><p>打开购买域名网站控制台，添加如下记录</p><img src="/2023/04/06/%E4%BD%BF%E7%94%A8Hexo+GitHub%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/DNSControler.png" class="" title="控制台"><p>图中<code>IP</code>地址可以通过<code>ping flyingfishl.github.io</code> 命令得到，如果<code>IP</code>地址经常变，可以多添加几条<code>@</code>记录</p><p>之后打开本地博客项目文件夹根目录下的的<code>source</code>文件夹，在其中添加<code>CNAME</code> 文件，并在其中输入你的域名然后保存，之后回到博客项目根目录下运行如下命令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo d    </span><br></pre></td></tr></table></figure><p>之后回到<code>GitHub</code> ，查看<code>CANME</code> 文件是否上传，以及<code>Settings/Pages</code> 中的<code>Custom domain</code>选项是否已设置，如没有则需进行手动设置</p><img src="/2023/04/06/%E4%BD%BF%E7%94%A8Hexo+GitHub%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/GitHubPages.png" class="" title="GitHubPages"><p>之后即可在输入域名进行访问，检查是否配置成功。</p><h2 id="9-Hexo源文件备份和多平台同步方案"><a href="#9-Hexo源文件备份和多平台同步方案" class="headerlink" title="9. Hexo源文件备份和多平台同步方案"></a>9. Hexo源文件备份和多平台同步方案</h2><p>在<code>GitHub</code>上创建一个名为<code>Blog</code>的私有仓库，之后回到本地博客项目根目录，使用<code>git init</code>初始化本地仓库，之后创建<code>.gitignore</code>文件，其中内容如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">.DS_Store</span><br><span class="line">Thumbs.db</span><br><span class="line">db.json</span><br><span class="line">*.log</span><br><span class="line">node_modules/</span><br><span class="line">public/</span><br><span class="line">.deploy*/</span><br><span class="line">_multiconfig.yml</span><br></pre></td></tr></table></figure><p>在我的系统上，使用<code>git init</code>命令后已经自动生成该文件，如果没有生成该文件，则需要手动创建，之后使用如下命令将本地仓库关联到远程仓库</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote add github git@github.com:FlyingFishL/Blog.git</span><br></pre></td></tr></table></figure><p>关联完成后可以使用<code>git remote -v</code>检查是否关联成功，之后使用如下命令将本地文件推送到远程仓库</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git add .</span><br><span class="line">git commit -m &quot;使用本地文件初始化仓库&quot;</span><br><span class="line">git push github main</span><br></pre></td></tr></table></figure><p>此时可以登录<code>GitHub</code> 上查看是否上传，自此备份方案完成。</p><p>如需在另一台电脑上进行博客上传，则在本地已安装<code>node.js</code> +<code>npm</code> +<code>Hexo</code>的环境下，使用<code>git clone</code> 命令下载远程仓库，之后使用命令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git</span><br></pre></td></tr></table></figure><p>安装<code>git</code>依赖，之后即可使用<code>Hexo</code>进行博文发布。</p><p>需要注意的是，上传博客文章时，需要同步修改<code>Blog</code>仓库并上传到远程仓库。</p>]]></content>
      
      
      <categories>
          
          <category> 博客搭建之路 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> GitHub </tag>
            
            <tag> Blog </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
